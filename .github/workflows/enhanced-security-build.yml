name: Enhanced Security Build and CIS Benchmark

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  security-build-fedora:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [fedora42, centos-stream]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image - ${{ matrix.platform }}
      run: |
        if [ "${{ matrix.platform }}" == "fedora42" ]; then
          docker build -f Dockerfile-fedora42 -t rpm-tomcat:${{ matrix.platform }} .
        else
          docker build -f Dockerfile-centos-stream -t rpm-tomcat:${{ matrix.platform }} .
        fi

    - name: Extract CIS benchmark artifacts from ${{ matrix.platform }}
      run: |
        # Create artifacts directory
        mkdir -p artifacts/${{ matrix.platform }}
        
        # Extract CIS audit logs and reports from the container
        docker run --rm -v $(pwd)/artifacts/${{ matrix.platform }}:/host-artifacts rpm-tomcat:${{ matrix.platform }} /bin/bash -c "
          if [ -d /var/log/cis-audit ]; then
            cp -r /var/log/cis-audit/* /host-artifacts/ 2>/dev/null || true
          fi
          
          # Generate additional system information
          echo '=== System Information ===' > /host-artifacts/system-info.txt
          cat /etc/os-release >> /host-artifacts/system-info.txt
          echo '' >> /host-artifacts/system-info.txt
          echo '=== Installed Packages ===' >> /host-artifacts/system-info.txt
          rpm -qa | sort >> /host-artifacts/system-info.txt 2>/dev/null || true
          dnf list installed >> /host-artifacts/system-info.txt 2>/dev/null || true
          
          echo '=== Security Configuration ===' > /host-artifacts/security-config.txt
          echo '--- sysctl settings ---' >> /host-artifacts/security-config.txt
          sysctl -a 2>/dev/null | grep -E '(net\.|kernel\.|fs\.)' >> /host-artifacts/security-config.txt || true
          
          echo '--- SSH Configuration ---' >> /host-artifacts/security-config.txt
          cat /etc/ssh/sshd_config.d/99-cis.conf >> /host-artifacts/security-config.txt 2>/dev/null || true
          
          echo '--- Audit Rules ---' >> /host-artifacts/security-config.txt
          cat /etc/audit/rules.d/99-cis.rules >> /host-artifacts/security-config.txt 2>/dev/null || true
        "

    - name: Run Grype vulnerability scan - ${{ matrix.platform }}
      uses: anchore/scan-action@v4
      id: scan
      with:
        image: rpm-tomcat:${{ matrix.platform }}
        fail-build: false
        output-format: json
        severity-cutoff: medium

    - name: Check vulnerability scan results - ${{ matrix.platform }}
      run: |
        # Parse the Grype results and check for medium+ severity vulnerabilities
        MEDIUM_HIGH_VULNS=$(jq -r '.matches[] | select(.vulnerability.severity == "Medium" or .vulnerability.severity == "High" or .vulnerability.severity == "Critical") | .vulnerability.id' results.json | wc -l)
        
        echo "Found $MEDIUM_HIGH_VULNS medium or higher severity vulnerabilities"
        
        if [ "$MEDIUM_HIGH_VULNS" -gt 0 ]; then
          echo "❌ Build failed due to medium or higher severity vulnerabilities"
          echo "=== Vulnerability Details ===" > artifacts/${{ matrix.platform }}/vulnerability-failures.txt
          jq -r '.matches[] | select(.vulnerability.severity == "Medium" or .vulnerability.severity == "High" or .vulnerability.severity == "Critical") | "ID: \(.vulnerability.id), Severity: \(.vulnerability.severity), Package: \(.artifact.name)"' results.json >> artifacts/${{ matrix.platform }}/vulnerability-failures.txt
          
          # Copy full vulnerability report
          cp results.json artifacts/${{ matrix.platform }}/vulnerability-scan-results.json
          
          echo "Vulnerability details saved to artifacts"
          exit 1
        else
          echo "✅ No medium or higher severity vulnerabilities found"
          cp results.json artifacts/${{ matrix.platform }}/vulnerability-scan-results.json
        fi

    - name: Upload CIS Benchmark and Security Artifacts - ${{ matrix.platform }}
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: cis-benchmark-${{ matrix.platform }}-${{ github.run_number }}
        path: artifacts/${{ matrix.platform }}/
        retention-days: 30

    - name: Generate Security Summary - ${{ matrix.platform }}
      if: always()
      run: |
        echo "## Security Build Summary - ${{ matrix.platform }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### CIS Level 2 Benchmark Applied ✅" >> $GITHUB_STEP_SUMMARY
        
        if [ -f "artifacts/${{ matrix.platform }}/cis-*-report.txt" ]; then
          echo "- CIS benchmark report generated" >> $GITHUB_STEP_SUMMARY
          echo "- Audit logs captured" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Vulnerability Scan Results" >> $GITHUB_STEP_SUMMARY
        
        if [ -f "artifacts/${{ matrix.platform }}/vulnerability-failures.txt" ]; then
          echo "❌ **Build failed due to security vulnerabilities**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Critical vulnerabilities found:" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          head -20 "artifacts/${{ matrix.platform }}/vulnerability-failures.txt" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
        else
          echo "✅ **No medium+ severity vulnerabilities found**" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Artifacts Generated" >> $GITHUB_STEP_SUMMARY
        echo "- CIS benchmark reports and logs" >> $GITHUB_STEP_SUMMARY
        echo "- System configuration snapshots" >> $GITHUB_STEP_SUMMARY
        echo "- Vulnerability scan results" >> $GITHUB_STEP_SUMMARY
        echo "- Security configuration details" >> $GITHUB_STEP_SUMMARY

    - name: Upload SARIF file for GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: results.sarif

  security-validation:
    runs-on: ubuntu-latest
    needs: [security-build-fedora]
    if: always()
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: all-artifacts/

    - name: Generate Combined Security Report
      run: |
        echo "# Combined Security Assessment Report" > security-report.md
        echo "Generated: $(date)" >> security-report.md
        echo "" >> security-report.md
        
        for platform in fedora42 centos-stream; do
          echo "## $platform Platform" >> security-report.md
          echo "" >> security-report.md
          
          if [ -d "all-artifacts/cis-benchmark-$platform-${{ github.run_number }}" ]; then
            artifact_dir="all-artifacts/cis-benchmark-$platform-${{ github.run_number }}"
            
            if [ -f "$artifact_dir/cis-*-report.txt" ]; then
              echo "### CIS Benchmark Report" >> security-report.md
              echo '```' >> security-report.md
              cat $artifact_dir/cis-*-report.txt >> security-report.md
              echo '```' >> security-report.md
              echo "" >> security-report.md
            fi
            
            if [ -f "$artifact_dir/vulnerability-failures.txt" ]; then
              echo "### Security Vulnerabilities (BUILD FAILED)" >> security-report.md
              echo '```' >> security-report.md
              cat "$artifact_dir/vulnerability-failures.txt" >> security-report.md
              echo '```' >> security-report.md
              echo "" >> security-report.md
            else
              echo "### Security Status: ✅ PASSED" >> security-report.md
              echo "No medium or higher severity vulnerabilities found." >> security-report.md
              echo "" >> security-report.md
            fi
          fi
        done

    - name: Upload Combined Security Report
      uses: actions/upload-artifact@v4
      with:
        name: combined-security-report-${{ github.run_number }}
        path: security-report.md
        retention-days: 90